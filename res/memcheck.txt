mhouse@blackbox:~/Projects/cpp/mcalc$ valgrind --tool=memcheck ./bin/mcalc
==11232== Memcheck, a memory error detector
==11232== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==11232== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==11232== Command: ./bin/mcalc
==11232==
--11232-- WARNING: Serious error when reading debug info
--11232-- When reading debug info from /usr/lib/x86_64-linux-gnu/libgtkmm-3.0.so.1.1.0:
--11232-- Ignoring non-Dwarf2/3/4 block in .debug_info
--11232-- WARNING: Serious error when reading debug info
--11232-- When reading debug info from /usr/lib/x86_64-linux-gnu/libgtkmm-3.0.so.1.1.0:
--11232-- Last block truncated in .debug_info; ignoring
--11232-- WARNING: Serious error when reading debug info
--11232-- When reading debug info from /usr/lib/x86_64-linux-gnu/libgtkmm-3.0.so.1.1.0:
--11232-- parse_CU_Header: is neither DWARF2 nor DWARF3 nor DWARF4
--11232-- WARNING: Serious error when reading debug info
--11232-- When reading debug info from /usr/lib/x86_64-linux-gnu/libgdkmm-3.0.so.1.1.0:
--11232-- Ignoring non-Dwarf2/3/4 block in .debug_info
--11232-- WARNING: Serious error when reading debug info
--11232-- When reading debug info from /usr/lib/x86_64-linux-gnu/libgdkmm-3.0.so.1.1.0:
--11232-- Last block truncated in .debug_info; ignoring
--11232-- WARNING: Serious error when reading debug info
--11232-- When reading debug info from /usr/lib/x86_64-linux-gnu/libgdkmm-3.0.so.1.1.0:
--11232-- parse_CU_Header: is neither DWARF2 nor DWARF3 nor DWARF4
==11232== Conditional jump or move depends on uninitialised value(s)
==11232==    at 0x527FB0: mc::Slider::notify(mc::Event*) (slider.cpp:26)
==11232==    by 0x403BFB: mc::Broadcaster::broadcast(mc::Event) (broadcaster.cpp:19)
==11232==    by 0x406F05: mc::ComboBoxText::broadcast() (comboboxtext.cpp:33)
==11232==    by 0x40F50D: sigc::bound_mem_functor0<void, mc::ComboBoxText>::operator()() const (in /home/mhouse/Projects/cpp/mcalc/bin/mcalc)
==11232==    by 0x40E8B1: sigc::adaptor_functor<sigc::bound_mem_functor0<void, mc::ComboBoxText> >::operator()() const (adaptor_trait.h:256)
==11232==    by 0x40D729: sigc::internal::slot_call0<sigc::bound_mem_functor0<void, mc::ComboBoxText>, void>::call_it(sigc::internal::slot_rep*) (slot.h:108)
==11232==    by 0x55C61F7: Glib::SignalProxyNormal::slot0_void_callback(_GObject*, void*) (in /usr/lib/x86_64-linux-gnu/libglibmm-2.4.so.1.3.0)
==11232==    by 0x811DFA4: g_closure_invoke (in /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0.4800.2)
==11232==    by 0x8130263: ??? (in /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0.4800.2)
==11232==    by 0x8138D5B: g_signal_emit_valist (in /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0.4800.2)
==11232==    by 0x813908E: g_signal_emit (in /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0.4800.2)
==11232==    by 0x5936A0A: ??? (in /usr/lib/x86_64-linux-gnu/libgtk-3.so.0.1800.9)
==11232==
==11232== Conditional jump or move depends on uninitialised value(s)
==11232==    at 0x527FB0: mc::Slider::notify(mc::Event*) (slider.cpp:26)
==11232==    by 0x403BFB: mc::Broadcaster::broadcast(mc::Event) (broadcaster.cpp:19)
==11232==    by 0x405073: mc::Spinner::broadcast() (spinner.cpp:26)
==11232==    by 0x40685D: sigc::bound_mem_functor0<void, mc::Spinner>::operator()() const (in /home/mhouse/Projects/cpp/mcalc/bin/mcalc)
==11232==    by 0x406703: sigc::adaptor_functor<sigc::bound_mem_functor0<void, mc::Spinner> >::operator()() const (adaptor_trait.h:256)
==11232==    by 0x40641F: sigc::internal::slot_call0<sigc::bound_mem_functor0<void, mc::Spinner>, void>::call_it(sigc::internal::slot_rep*) (slot.h:108)
==11232==    by 0x55C61F7: Glib::SignalProxyNormal::slot0_void_callback(_GObject*, void*) (in /usr/lib/x86_64-linux-gnu/libglibmm-2.4.so.1.3.0)
==11232==    by 0x811DFA4: g_closure_invoke (in /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0.4800.2)
==11232==    by 0x8130263: ??? (in /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0.4800.2)
==11232==    by 0x8138D5B: g_signal_emit_valist (in /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0.4800.2)
==11232==    by 0x813908E: g_signal_emit (in /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0.4800.2)
==11232==    by 0x5A92A28: ??? (in /usr/lib/x86_64-linux-gnu/libgtk-3.so.0.1800.9)
==11232==
==11232== Conditional jump or move depends on uninitialised value(s)
==11232==    at 0x527FB0: mc::Slider::notify(mc::Event*) (slider.cpp:26)
==11232==    by 0x403BFB: mc::Broadcaster::broadcast(mc::Event) (broadcaster.cpp:19)
==11232==    by 0x528075: mc::Slider::broadcast() (slider.cpp:36)
==11232==    by 0x52A711: sigc::bound_mem_functor0<void, mc::Slider>::operator()() const (in /home/mhouse/Projects/cpp/mcalc/bin/mcalc)
==11232==    by 0x52A515: sigc::adaptor_functor<sigc::bound_mem_functor0<void, mc::Slider> >::operator()() const (adaptor_trait.h:256)
==11232==    by 0x52A205: sigc::internal::slot_call0<sigc::bound_mem_functor0<void, mc::Slider>, void>::call_it(sigc::internal::slot_rep*) (slot.h:108)
==11232==    by 0x55C61F7: Glib::SignalProxyNormal::slot0_void_callback(_GObject*, void*) (in /usr/lib/x86_64-linux-gnu/libglibmm-2.4.so.1.3.0)
==11232==    by 0x811DFA4: g_closure_invoke (in /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0.4800.2)
==11232==    by 0x8130263: ??? (in /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0.4800.2)
==11232==    by 0x8138D5B: g_signal_emit_valist (in /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0.4800.2)
==11232==    by 0x813908E: g_signal_emit (in /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0.4800.2)
==11232==    by 0x811DFA4: g_closure_invoke (in /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0.4800.2)
==11232==
==11232==
==11232== HEAP SUMMARY:
==11232==     in use at exit: 4,220,886 bytes in 55,022 blocks
==11232==   total heap usage: 1,868,726 allocs, 1,813,704 frees, 100,927,117 bytes allocated
==11232==
==11232== LEAK SUMMARY:
==11232==    definitely lost: 19,200 bytes in 6 blocks
==11232==    indirectly lost: 13,103 bytes in 551 blocks
==11232==      possibly lost: 557,329 bytes in 12,169 blocks
==11232==    still reachable: 3,266,862 bytes in 39,428 blocks
==11232==                       of which reachable via heuristic:
==11232==                         length64           : 36,528 bytes in 477 blocks
==11232==                         newarray           : 2,432 bytes in 72 blocks
==11232==                         multipleinheritance: 2,016 bytes in 20 blocks
==11232==         suppressed: 0 bytes in 0 blocks
==11232== Rerun with --leak-check=full to see details of leaked memory
==11232==
==11232== For counts of detected and suppressed errors, rerun with: -v
==11232== Use --track-origins=yes to see where uninitialised values come from
==11232== ERROR SUMMARY: 45 errors from 3 contexts (suppressed: 0 from 0)
